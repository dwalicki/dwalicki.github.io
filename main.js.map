{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/schedule/schedule.component.css","webpack:///./src/app/components/schedule/schedule.component.html","webpack:///./src/app/components/schedule/schedule.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/services/investment-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ScheduleComponent } from './components/schedule/schedule.component'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'schedule',\r\n    component: ScheduleComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { /*enableTracing: true*/ })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n </div>\\n<div>\\n  <nav class='navbar navbar-default'>\\n    <div class='container-fluid'>\\n      <a class='navbar-brand'>{{pageTitle}}</a>\\n      <ul class='nav navbar-nav'>\\n        <li><a [routerLink]=\\\"['/schedule']\\\">Schedule</a></li>\\n      </ul>\\n    </div>\\n  </nav>\\n  <div class='container'>\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  pageTitle = 'Carta';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { MaterialModule } from './material.module';\n\nimport { AppComponent } from './app.component';\nimport { ScheduleComponent } from './components/schedule/schedule.component';\n\n/* Services */\nimport { InvestmentServiceService } from './services/investment-service.service';\n\n/* Routing */\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ScheduleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpModule,\n    FormsModule,\n    MaterialModule\n  ],\n  providers: [\n    InvestmentServiceService\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","module.exports = \".title-row{\\r\\n    background: lightskyblue;\\r\\n}\\r\\n\\r\\n.title-row-bold {\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.shares-column, .cost-column {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.investment-row {\\r\\n    background: lightgray;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.asset-row{\\r\\n    background: white;\\r\\n}\\r\\n\\r\\n.investment-quantity, .investment-cost, .asset-quantity, .asset-cost {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.mat-expansion-panel, .mat-expansion-panel-header {\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.total-cost{\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zY2hlZHVsZS9zY2hlZHVsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0NBQzVCOztBQUVEO0lBQ0ksa0JBQWtCO0NBQ3JCOztBQUVEO0lBQ0ksa0JBQWtCO0NBQ3JCOztBQUVEO0lBQ0ksc0JBQXNCO0lBQ3RCLG9CQUFvQjtDQUN2Qjs7QUFFRDtJQUNJLGtCQUFrQjtDQUNyQjs7QUFFRDtJQUNJLGtCQUFrQjtDQUNyQjs7QUFFRDtJQUNJLHVCQUF1QjtDQUMxQjs7QUFFRDtJQUNJLGtCQUFrQjtDQUNyQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2NoZWR1bGUvc2NoZWR1bGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50aXRsZS1yb3d7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaWdodHNreWJsdWU7XHJcbn1cclxuXHJcbi50aXRsZS1yb3ctYm9sZCB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLnNoYXJlcy1jb2x1bW4sIC5jb3N0LWNvbHVtbiB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxufVxyXG5cclxuLmludmVzdG1lbnQtcm93IHtcclxuICAgIGJhY2tncm91bmQ6IGxpZ2h0Z3JheTtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbi5hc3NldC1yb3d7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxufVxyXG5cclxuLmludmVzdG1lbnQtcXVhbnRpdHksIC5pbnZlc3RtZW50LWNvc3QsIC5hc3NldC1xdWFudGl0eSwgLmFzc2V0LWNvc3Qge1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn1cclxuXHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsLCAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuLnRvdGFsLWNvc3R7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxufVxyXG5cclxuIl19 */\"","module.exports = \"<div class=\\\"panel panel-primary\\\">\\n  <div class=\\\"panel-body\\\">\\n    <div class=\\\"row title-row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"row title-row-bold\\\">\\n         <div class=\\\"col-md-12\\\">\\n            Krakatoa Ventures Fund I, L.P.\\n         </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            As of {{ investmentDate}}\\n          </div>\\n        </div>\\n        <div class=\\\"row title-row-bold\\\">\\n          <div class=\\\"col-md-2\\\">\\n            Investment\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            Asset\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            Investment date\\n          </div>\\n          <div class=\\\"col-md-2 shares-column\\\">\\n            Shares\\n          </div>\\n          <div class=\\\"col-md-2 cost-column\\\">\\n            Cost\\n          </div>\\n        </div>      \\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <mat-form-field>\\n            <input \\n              matInput [matDatepicker]=\\\"picker\\\" \\n              placeholder=\\\"\\\"\\n              (dateChange)=\\\"addEvent('change', $event)\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker></mat-datepicker>\\n        </mat-form-field>\\n        <button (click)=\\\"allExpandState = true\\\">Expand All </button>\\n        <button (click)=\\\"allExpandState = false\\\">Collapse All </button>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div *ngFor='let investment of investments' class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n              <mat-expansion-panel [expanded]=\\\"allExpandState\\\">\\n                  <mat-expansion-panel-header class=\\\"row\\\">\\n                    <mat-panel-title class=\\\"col-md-6\\\">\\n                        {{ investment.name }}\\n                    </mat-panel-title>\\n                    <mat-panel-description class=\\\"col-md-6\\\">\\n                          <div class=\\\"col-md-5\\\">\\n                            <!--empty whitespace-->\\n                          </div>\\n                  <!--created a ternary for case of a company(Questindustries) having no shares or possibly cost, \\n                          the value null was displaying 0, but the example given shows nothing,\\n                          adjusted accordingly to display empty string-->                          \\n                          <div class=\\\"col-md-3 investment-quantity\\\">\\n                              {{ investment.quantity > 0 ? investment.quantity : \\\"\\\" }} $\\n                          </div>\\n                          <div class=\\\"col-md-4 investment-cost\\\">\\n                              {{ investment.cost.$ > 0 ? investment.cost.$ : \\\"\\\" }} $   \\n                          </div>\\n                    </mat-panel-description>\\n                  </mat-expansion-panel-header>\\n                \\n                    <div *ngFor='let issued_asset of investment.issued_assets' class=\\\"row asset-row\\\">\\n                      <div class=\\\"col-md-2\\\">\\n                          <!--empty whitespace-->\\n                      </div>\\n                      <div class=\\\"col-md-3\\\">\\n                        {{ issued_asset.asset_class }}\\n                      </div>\\n                      <div class=\\\"col-md-3\\\">\\n                        {{ issued_asset.investment_date }}\\n                      </div>\\n                  <!--created a ternary for case of a company(Questindustries) having no shares or possibly cost, \\n                          the value null was displaying 0, but the example given shows nothing,\\n                          adjusted accordingly to display empty string-->\\n                      <div class=\\\"col-md-2 asset-quantity\\\">\\n                        {{ issued_asset.quantity > 0 ? issued_asset.quantity : \\\"\\\" }} $\\n                      </div>\\n                      <div class=\\\"col-md-2 asset-cost\\\">\\n                        {{ issued_asset.cost.$ > 0 ? issued_asset.cost.$ : \\\"\\\" }} $\\n                      </div>\\n                    </div>              \\n                </mat-expansion-panel>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row .title-row-bold\\\">\\n      <div class=\\\"col-md-6\\\">\\n        Total \\n      </div>\\n      <div class=\\\"col-md-6 total-cost\\\">\\n         $ {{ totalCost }}\\n        </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { InvestmentServiceService } from '../../services/investment-service.service'\n\nimport { Investment } from '../../models/investment';\n\nimport { MatDatepickerInputEvent } from '@angular/material'\n\n@Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.css']\n})\nexport class ScheduleComponent implements OnInit {\n  private totalCost: number;\n  private allExpandState: boolean = true;\n  private picker: any;\n  private investmentDate: string;\n  private pageTitle: string = \"Schedule\";\n  private investments: Investment[];\n\n  constructor(\n    private _investmentService: InvestmentServiceService) { }\n\n  ngOnInit() { \n    let now = new Date();\n    this.investmentDate = now.toString();\n\n    this._investmentService.getInvestments(null)\n      .subscribe((investments: Investment[]) => {\n        this.investments = investments;\n        this.totalCost = this.retrieveTotal();\n      },\n      error => {\n        console.log(\"Error: \" + <any>error);\n      });\n  }\n  retrieveTotal(){\n    var totalCost = 0;\n\n    for(var i = 0;i<this.investments.length;i++){\n      totalCost += this.investments[i].cost[\"$\"];\n    }\n    return totalCost;\n  }\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    this.investmentDate = event.value.toString();\n\n    this._investmentService.getInvestments(event.value)\n      .subscribe((investments: Investment[]) => {\n        this.investments = investments;\n      },\n      error => {\n        console.log(\"Error: \" + <any>error);\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatFormFieldModule,\r\n        MatInputModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatExpansionModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule   \r\n  ],\r\n  exports: [\r\n    MatExpansionModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [ MatDatepickerModule ],\r\n})\r\n\r\nexport class MaterialModule {}","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/observable/throw';\nimport { map } from 'rxjs/operators';\n\nimport { Investment } from '../models/investment';\n\n@Injectable()\nexport class InvestmentServiceService {\n\n  investmentUrl: string = \"https://gist.githubusercontent.com/cranium/d8b83184bf0750f2c834760b7c9203dc/raw/a73a70716951f77b90e84b8848ff1fee46938dd1/soi.json\";\n\n  constructor(\n    private _http: Http) {  }\n\n    getInvestments(filter: Date): Observable<Investment[]>  {\n      let endpointUrl: string = this.investmentUrl;\n\n      if(filter !== null){\n        // append ?date=YYYY-MM-DD\n        let dayNumber: number = filter.getDate();\n        let day: string = dayNumber > 9 ? dayNumber + \"\" : \"0\" + dayNumber;\n\n        let monthNumber: number = filter.getMonth()+1;\n        let month: string = monthNumber > 9 ? monthNumber + \"\" : \"0\" + monthNumber;\n\n        let year: string = filter.getFullYear() + \"\";\n\n        let dateFilter: string = year + \"-\" + month + \"-\" + day;\n\n        // FUTURE REFERENCE: uncomment this when the API is real and not a file storing json data\n        // endpointUrl = endpointUrl + \"?date=\" + dateFilter\n      }\n\n      return this._http.get(endpointUrl)\n          .pipe(\n            map(response => {\n              let investments = response.json() as Investment[];\n            \n              return investments;\n            }\n          )\n        );\n    }\n\n    private handleError(error: Response) {\n      console.error(error);\n      return Observable.throw(error.json().error || 'Server error');\n    }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}